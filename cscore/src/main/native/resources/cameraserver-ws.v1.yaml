asyncapi: 2.0.0
id: urn:org:wpilib:cameraserver:websockets
info:
  title: cameraserver-ws
  version: '1.0'
  license:
    name: MIT
  description: WPILib CameraServer WebSockets
  contact:
    name: WPILib Development Team
    url: 'https://wpilib.org/'
    email: wpilib@wpi.edu
tags:
  - name: sources
    description: Sources operations
  - name: server
    description: Server operations
  - name: properties
    description: Properties operations
  - name: usb
    description: USB operations
servers:
  robot:
    url: 'ws://roborio-{team}-frc.local:{port}/'
    protocol: ws
    variables:
      team:
        description: Team number
        examples:
          - '294'
      port:
        description: Port number
        default: '1181'
defaultContentType: application/json
channels:
  '/':
    description: WebSockets communication channel
    bindings:
      ws:
        method: GET
    subscribe:
      message:
        oneOf:
          - $ref: '#/components/messages/getSourceList'
          - $ref: '#/components/messages/createSource'
          - $ref: '#/components/messages/deleteSource'
          - $ref: '#/components/messages/getSourceInfo'
          - $ref: '#/components/messages/getSourceStatus'
          - $ref: '#/components/messages/getSourceMode'
          - $ref: '#/components/messages/setSourceMode'
          - $ref: '#/components/messages/getSourceUsbPath'
          - $ref: '#/components/messages/setSourceUsbPath'
          - $ref: '#/components/messages/getSourceUrls'
          - $ref: '#/components/messages/setSourceUrls'
          - $ref: '#/components/messages/getSourceProperties'
          - $ref: '#/components/messages/getSourcePropertyInfo'
          - $ref: '#/components/messages/getSourceProperty'
          - $ref: '#/components/messages/setSourceProperty'
          - $ref: '#/components/messages/getServerProperties'
          - $ref: '#/components/messages/getServerPropertyInfo'
          - $ref: '#/components/messages/getServerProperty'
          - $ref: '#/components/messages/setServerProperty'
          - $ref: '#/components/messages/getServerStreams'
          - $ref: '#/components/messages/getServerStreamsPeriodic'
          - $ref: '#/components/messages/getUsbCameraList'
          - $ref: '#/components/messages/startStream'
          - $ref: '#/components/messages/stopStream'
          - $ref: '#/components/messages/getImage'
    publish:
      message:
        oneOf:
          - $ref: '#/components/messages/status'
          - $ref: '#/components/messages/sourceCreated'
          - $ref: '#/components/messages/sourceDeleted'
          - $ref: '#/components/messages/sourceProperty'
          - $ref: '#/components/messages/sourcePropertyValue'
          - $ref: '#/components/messages/sourcePropertyChoices'
          - $ref: '#/components/messages/serverProperty'
          - $ref: '#/components/messages/serverPropertyValue'
          - $ref: '#/components/messages/serverPropertyChoices'
          - $ref: '#/components/messages/usbCameraList'
          - $ref: '#/components/messages/sourceList'
          - $ref: '#/components/messages/sourceInfo'
          - $ref: '#/components/messages/sourceStatus'
          - $ref: '#/components/messages/sourceMode'
          - $ref: '#/components/messages/sourceUsbPath'
          - $ref: '#/components/messages/sourceUrls'
          - $ref: '#/components/messages/sourceProperties'
          - $ref: '#/components/messages/sourcePropertyInfo'
          - $ref: '#/components/messages/serverProperties'
          - $ref: '#/components/messages/serverPropertyInfo'
          - $ref: '#/components/messages/serverStreams'
components:
  schemas:
    SourceDetail:
      allOf:
        - $ref: '#/components/schemas/SourceBasic'
        - type: object
          properties:
            connectionStrategy:
              $ref: '#/components/schemas/ConnectionStrategy'
            connected:
              type: boolean
            mode:
              $ref: '#/components/schemas/Mode'
            modes:
              type: array
              items:
                $ref: '#/components/schemas/Mode'
            actualFps:
              type: number
            actualDataRate:
              type: number
          required:
            - connectionStrategy
            - connected
            - mode
            - modes
      description: ''
      x-tags:
        - sources
    Mode:
      title: Mode
      type: object
      properties:
        pixelFormat:
          type: string
        width:
          type: integer
        height:
          type: integer
        fps:
          type: integer
      x-tags:
        - sources
    UsbCameraInfo:
      title: UsbCameraInfo
      type: object
      properties:
        dev:
          type: integer
        path:
          type: string
        name:
          type: string
        otherPaths:
          type: array
          items:
            type: string
        vendorId:
          type: integer
        productId:
          type: integer
      x-tags:
        - usb
    SourceBasic:
      title: SourceBasic
      type: object
      x-tags:
        - sources
      properties:
        id:
          type: string
        description:
          type: string
        kind:
          $ref: '#/components/schemas/SourceKind'
      required:
        - id
        - kind
    SourceKind:
      type: string
      title: SourceKind
      enum:
        - usb
        - network
        - image
      x-tags:
        - sources
    ConnectionStrategy:
      type: string
      title: ConnectionStrategy
      enum:
        - auto
        - open
        - close
      x-tags:
        - sources
      x-examples: {}
    UsbSource:
      allOf:
        - $ref: '#/components/schemas/SourceDetail'
        - type: object
          properties:
            usbPath:
              type: string
            usbCameraInfo:
              $ref: '#/components/schemas/UsbCameraInfo'
      x-tags:
        - sources
        - usb
    NetworkSource:
      title: NetworkSource
      allOf:
        - $ref: '#/components/schemas/SourceDetail'
        - type: object
          properties:
            urls:
              type: array
              items:
                type: string
                format: uri
          required:
            - urls
      x-tags:
        - sources
    Source:
      title: Source
      oneOf:
        - $ref: '#/components/schemas/UsbSource'
        - $ref: '#/components/schemas/NetworkSource'
        - $ref: '#/components/schemas/SourceDetail'
      x-tags:
        - sources
    Property:
      title: Property
      x-tags:
        - properties
      oneOf:
        - $ref: '#/components/schemas/BooleanProperty'
        - $ref: '#/components/schemas/IntegerProperty'
        - $ref: '#/components/schemas/EnumProperty'
        - $ref: '#/components/schemas/StringProperty'
    PropertyKind:
      type: string
      title: PropertyKind
      enum:
        - boolean
        - integer
        - string
        - enum
      x-tags:
        - properties
    CreateNetworkSource:
      title: CreateNetworkSource
      type: object
      properties:
        id:
          type: string
        kind:
          $ref: '#/components/schemas/SourceKind'
        url:
          oneOf:
            - type: string
              format: uri
            - type: array
              items:
                type: string
                format: uri
      required:
        - id
        - kind
        - url
    CreateUsbSource:
      title: CreateUsbSource
      type: object
      properties:
        id:
          type: string
        kind:
          $ref: '#/components/schemas/SourceKind'
        path:
          type: string
      required:
        - id
        - kind
        - path
    CreateSource:
      title: CreateSource
      oneOf:
        - $ref: '#/components/schemas/CreateUsbSource'
        - $ref: '#/components/schemas/CreateNetworkSource'
    StringProperty:
      title: StringProperty
      type: object
      properties:
        id:
          type: string
        kind:
          $ref: '#/components/schemas/PropertyKind'
        value:
          type: string
        default:
          type: string
      required:
        - id
        - kind
        - value
    BooleanProperty:
      title: BooleanProperty
      type: object
      properties:
        id:
          type: string
        kind:
          $ref: '#/components/schemas/PropertyKind'
        value:
          type: boolean
        default:
          type: boolean
      required:
        - id
        - kind
        - value
    IntegerProperty:
      title: IntegerProperty
      type: object
      properties:
        id:
          type: string
        kind:
          $ref: '#/components/schemas/PropertyKind'
        value:
          type: integer
        min:
          type: integer
        max:
          type: integer
        step:
          type: integer
        default:
          type: integer
      required:
        - id
        - kind
        - value
    EnumProperty:
      title: EnumProperty
      type: object
      properties:
        id:
          type: string
        kind:
          $ref: '#/components/schemas/PropertyKind'
        value:
          type: integer
        default:
          type: integer
        choices:
          type: array
          items:
            type: string
      required:
        - id
        - kind
        - value
    Stream:
      title: Stream
      type: object
      properties:
        sourceId:
          type: string
        remoteIp:
          type: string
          format: ipv4
        remotePort:
          type: integer
        actualFps:
          type: number
        actualDataRate:
          type: number
        config:
          type: object
          properties:
            fps:
              type: number
            width:
              type: integer
            height:
              type: integer
            quality:
              type: integer
  messages:
    getSourceList:
      summary: Gets list of all sources
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['getSourceList']
    createSource:
      summary: Creates a new source
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['createSource']
          source:
            $ref: '#/components/schemas/CreateSource'
    deleteSource:
      summary: Deletes a source
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['deleteSource']
          sourceId:
            type: string
    getSourceInfo:
      summary: Gets detailed information about a source
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['getSourceInfo']
          sourceId:
            type: string
    getSourceStatus:
      summary: Gets source status
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['getSourceStatus']
          sourceId:
            type: string
    getSourceMode:
      summary: Gets source video mode
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['getSourceMode']
          sourceId:
            type: string
    setSourceMode:
      summary: Sets source video mode
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['setSourceMode']
          sourceId:
            type: string
          mode:
            $ref: '#/components/schemas/Mode'
    getSourceUsbPath:
      summary: Gets source path (for USB sources)
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['getSourceUsbPath']
          sourceId:
            type: string
    setSourceUsbPath:
      summary: Sets source path (for USB sources)
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['getSourceUsbPath']
          sourceId:
            type: string
          path:
            type: string
    getSourceUrls:
      summary: Gets source urls (for network sources)
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['getSourceUrls']
          sourceId:
            type: string
    setSourceUrls:
      summary: Sets source urls (for network sources)
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['setSourceUrls']
          sourceId:
            type: string
          urls:
            type: array
            items:
              type: string
              format: uri
    getSourceProperties:
      summary: Gets list of all source properties
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['getSourceProperties']
          sourceId:
            type: string
    getSourcePropertyInfo:
      summary: Gets source property info
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['getSourcePropertyInfo']
          sourceId:
            type: string
          propertyId:
            type: string
    getSourceProperty:
      summary: Gets source property value
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['getSourceProperty']
          sourceId:
            type: string
          propertyId:
            type: string
    setSourceProperty:
      summary: Sets source property value
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['getSourceProperty']
          sourceId:
            type: string
          propertyId:
            type: string
          value:
            oneOf:
              - type: string
              - type: integer
              - type: boolean
    getServerProperties:
      summary: Gets list of all server properties
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['getServerProperties']
    getServerPropertyInfo:
      summary: Gets server property info
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['getServerPropertyInfo']
          propertyId:
            type: string
    getServerProperty:
      summary: Gets server property value
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['getServerProperty']
          propertyId:
            type: string
    setServerProperty:
      summary: Sets server property value
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['setServerProperty']
          propertyId:
            type: string
          value:
            oneOf:
              - type: string
              - type: integer
              - type: boolean
    getServerStreams:
      summary: Gets information about active streams
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['getServerStreams']
    getServerStreamsPeriodic:
      summary: Gets information about active streams periodically
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['getServerStreamsPeriodic']
          period:
            type: number
    getUsbCameraList:
      summary: Gets list of USB cameras
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['getUsbCameraList']
    startStream:
      summary: Starts video streaming
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['startStream']
          sourceId:
            type: string
          format:
            type: string
            enum: ['mjpeg']
          width:
            type: integer
          height:
            type: integer
          fps:
            type: integer
          quality:
            type: integer
    stopStream:
      summary: Stops video streaming
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['stopStream']
    getImage:
      summary: Gets a single snapshot image
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['getImage']
    status:
      summary: Status message
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['status']
          code:
            type: integer
          message:
            type: string
    sourceCreated:
      summary: Source created event
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['sourceCreated']
          source:
            $ref: '#/components/schemas/SourceBasic'
    sourceDeleted:
      summary: Source deleted event
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['sourceDeleted']
          sourceId:
            type: string
    sourceProperty:
      summary: Source property event
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['sourceProperty']
          sourceId:
            type: string
          property:
            $ref: '#/components/schemas/Property'
    sourcePropertyValue:
      summary: Source property value event
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['sourcePropertyValue']
          sourceId:
            type: string
          propertyId:
            type: string
          value:
            oneOf:
              - type: string
              - type: integer
              - type: boolean
    sourcePropertyChoices:
      summary: Source property choices event
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['sourcePropertyChoices']
          sourceId:
            type: string
          propertyId:
            type: string
          choices:
            type: array
            items:
              type: string
    serverProperty:
      summary: Server property event
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['serverProperty']
          property:
            $ref: '#/components/schemas/Property'
    serverPropertyValue:
      summary: Server property value event
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['serverPropertyValue']
          propertyId:
            type: string
          value:
            oneOf:
              - type: string
              - type: integer
              - type: boolean
    serverPropertyChoices:
      summary: Server property choices event
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['serverPropertyChoices']
          propertyId:
            type: string
          choices:
            type: array
            items:
              type: string
    usbCameraList:
      summary: USB camera list
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['usbCameraList']
          cameras:
            type: array
            items:
              $ref: '#/components/schemas/UsbCameraInfo'
    sourceList:
      summary: Source list
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['sourceList']
          sources:
            type: array
            items:
              $ref: '#/components/schemas/SourceBasic'
    sourceInfo:
      summary: Source info
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['sourceInfo']
          source:
            $ref: '#/components/schemas/Source'
    sourceStatus:
      summary: Source status
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['sourceStatus']
          sourceId:
            type: string
          status:
            type: object
            properties:
              connected:
                type: boolean
    sourceMode:
      summary: Source video mode
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['sourceMode']
          sourceId:
            type: string
          mode:
            $ref: '#/components/schemas/Mode'
    sourceUsbPath:
      summary: Source USB path
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['sourceUsbPath']
          sourceId:
            type: string
          path:
            type: string
    sourceUrls:
      summary: Source URLs list
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['sourceUrls']
          sourceId:
            type: string
          urls:
            type: array
            items:
              type: string
              format: uri
    sourceProperties:
      summary: Source properties list
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['sourceProperties']
          sourceId:
            type: string
          properties:
            type: array
            items:
              $ref: '#/components/schemas/Property'
    serverProperties:
      summary: Server properties list
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['serverProperties']
          properties:
            type: array
            items:
              $ref: '#/components/schemas/Property'
    serverStreams:
      summary: Active streams list
      payload:
        type: object
        properties:
          type:
            type: string
            enum: ['serverStreams']
          streams:
            type: array
            items:
              $ref: '#/components/schemas/Stream'
